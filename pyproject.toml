[tool.poetry]
name = "openpilot"
version = "0.1.0"
description = "an open source driver assistance system"
authors = ["Vehicle Researcher <user@comma.ai>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/commaai/openpilot"
documentation = "https://docs.comma.ai"


[tool.poetry.dependencies]
python = "~3.11"
atomicwrites = "*"
aiohttp = "*"
aiortc = "*"
casadi = "==3.6.3"
cffi = "*"
crcmod = "*"
cryptography = "*"
Cython = "*"
flake8 = "*"
Flask = "*"
future-fstrings = "*"  # for acados
gunicorn = "*"
hatanaka = "==2.4"
hexdump = "*"
Jinja2 = "*"
json-rpc = "*"
libusb1 = "*"
numpy = "==1.23.0"  # locked pending deprecation fixes in xx
onnx = ">=1.14.0"
onnxruntime-gpu = { version = ">=1.15.1", platform = "linux", markers = "platform_machine == 'x86_64'" }
pillow = "*"
poetry = "==1.2.2"
protobuf = "==3.20.3"
psutil = "*"
pyaudio = "*"
pycapnp = "*"
pycryptodome = "*"
pydub = "*"
PyJWT = "*"
pyopencl = "*"
pyserial = "*"
python-dateutil = "*"
PyYAML = "*"
pyzmq = "*"
requests = "*"
scons = "*"
sentry-sdk = "*"
setproctitle = "*"
smbus2 = "*"
sounddevice = "*"
spidev = { version = "*", platform = "linux" }
spidev2 = { version = "*", platform = "linux" }
sympy = "*"
timezonefinder = "*"
tqdm = "*"
urllib3 = "*"
utm = "*"
websocket_client = "*"
polyline = "*"
sconscontrib = {git = "https://github.com/SCons/scons-contrib.git"}


[tool.poetry.group.dev.dependencies]
av = "*"
azure-storage-blob = "~2.1"
breathe = "*"
carla = { url = "https://github.com/commaai/carla/releases/download/3.11.4/carla-0.9.14-cp311-cp311-linux_x86_64.whl", platform = "linux", markers = "platform_machine == 'x86_64'" }
control = "*"
coverage = "*"
dictdiffer = "*"
fastcluster = "*"
ft4222 = "*"
hexdump = "*"
hypothesis = "==6.46.7"
inputs = "*"
lru-dict = "*"
lxml = "*"
markdown-it-py = "*"
matplotlib = "*"
mpld3 = "*"
mypy = "*"
myst-parser = "*"
natsort = "*"
opencv-python-headless = "*"
pandas = "*"
parameterized = "^0.8"
paramiko = "*"
pprofile = "*"
pre-commit = "*"
pycurl = "*"
pygame = "*"
pylint = "*"
pyprof2calltree = "*"
pytest = "*"
pytest-xdist = "*"
reverse_geocoder = "*"
scipy = "==1.9.3"  # pinned until xx refs changes can be checked
sphinx = "*"
sphinx-rtd-theme = "*"
sphinx-sitemap = "*"
tabulate = "*"
tenacity = "*"
types-atomicwrites = "*"
types-certifi = "*"
types-pycurl = "*"
types-python-dateutil = "*"
types-PyYAML = "*"
types-requests = "*"
types-tabulate = "*"


[tool.poetry.group.xx]
optional = true

[tool.poetry.group.xx.dependencies]
aenum = "*"
aiohttp = "*"
albumentations = "*"
azure-cli-core = "*"
azure-common = "*"
azure-core = "*"
azure-nspkg = "~3.0"
azure-storage-common = "~2.1"
azure-storage-nspkg = "~3.1"
blosc = "==1.9.2"
cloudpickle = "*"
configargparse = "*"
cupy-cuda11x = "*"
datadog = "*"
dotmap = "*"
einops = "*"
elasticsearch = "*"
Flask-Cors = "*"
Flask-SocketIO = "*"
GeoAlchemy2 = "*"
imageio = "*"
influxdb-client = "*"
ipykernel = "*"
ipython = "*"
joblib = "*"
json-logging-py = "*"
jupyter = "*"
jupyterlab = "*"
jupyterlab-vim = "*"
Markdown = "*"
msgpack-python = "*"
networkx = "~2.8"
nvidia-ml-py3 = "*"
onnx2torch = "*"
onnxoptimizer = "*"
osmium = "*"
pillow-avif-plugin = "*"
pipenv = "==2022.10.12"
plotly = "*"
pycuda = "*"
Pygments = "*"
PyMySQL = "~0.9"
pyproj = "*"
python-logstash = "*"
redis = "*"
s2sphere = "*"
scikit-image = "*"
scikit-learn = "*"
segmentation-models-pytorch = "==0.3.3"
simplejson = "*"
SQLAlchemy = "*"
torch = { url = "https://download.pytorch.org/whl/cu118/torch-2.0.1%2Bcu118-cp311-cp311-linux_x86_64.whl" }
torchsummary = "*"
torchvision = { url = "https://download.pytorch.org/whl/cu118/torchvision-0.15.2%2Bcu118-cp311-cp311-linux_x86_64.whl" }
triton = "*"
Werkzeug = "*"
zerorpc = { git = "https://github.com/commaai/zerorpc-python.git", branch = "master" }
omegaconf = "*"
osmnx = "==1.2.2"
tritonclient = {version = "2.28.0", extras = ["http"]}
transformers = "*"
timm = "==0.9.2"
PyNvCodec = { git = "https://github.com/NVIDIA/VideoProcessingFramework.git", rev = "3347e55" }
apex = { url = "https://github.com/commaai/apex/releases/download/pytorch2.0.1%2Bcu11.8/apex-0.1-cp311-cp311-linux_x86_64.whl" }
opencv-python-headless = { url = "https://github.com/commaai/opencv-python-builder/releases/download/4.5.5.64%2Bcu118-cp311/opencv_python_headless-4.5.5.64-cp311-cp311-manylinux_2_31_x86_64.whl", platform = "linux" }


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
